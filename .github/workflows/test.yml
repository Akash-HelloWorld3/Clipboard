name: Clipboard Tests

on: [ push, pull_request ]
jobs:
  test-linux-amd64:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        gcc: [ 10, 11, 12 ]
        x11: [ "1", "0" ]
        wayland: [ "1", "0" ]

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        shell: 'script -q -e -c "bash --noprofile --norc -eo pipefail {0}"'
        run: |
          NO_X11=1
          NO_WAYLAND=1
          PACKAGES="g++-${{ matrix.gcc }}"

          if [[ "${{ matrix.x11 }}" == "1" ]]
          then
            NO_X11=0
            PACKAGES="${PACKAGES} libx11-dev"
          fi
          
          if [[ "${{ matrix.wayland }}" == "1" ]]
          then
            NO_WAYLAND=0
            PACKAGES="${PACKAGES} libwayland-dev"
          fi
          
          sudo apt update
          sudo apt install -y $PACKAGES

          cd build
          cmake .. "-DTEST=1" "-DCMAKE_CXX_COMPILER=g++-${{ matrix.gcc }}" "-DNO_X11=${NO_X11}" "-DNO_WAYLAND=${NO_WAYLAND}"
          cmake --build .
          sudo cmake --install .
          export TMPDIR=/tmp
          bash ../tests/suite.sh
  
  test-macos-amd64:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        run: |
          brew install gcc
          cd build
          cmake .. -D CMAKE_CXX_COMPILER=g++-12 -D TEST=1
          cmake --build .
          cmake --install .
          bash ../tests/suite.sh
  test-windows-amd64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        shell: bash
        run: |
          cd build
          cmake ..
          cmake --build . --config Release
          echo $HOME
          export TMPDIR=/c/Users/runneradmin/AppData/Local/Temp
          cmake --install .
          #installs to C:/Program Files (x86)/Clipboard/bin/clipboard.exe
          #add to path
          export PATH=$PATH:/c/Program\ Files\ \(x86\)/Clipboard/bin
          bash ../tests/suite.sh