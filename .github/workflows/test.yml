name: Clipboard Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test-linux-amd64:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        shell: 'script -q -e -c "bash --noprofile --norc -eo pipefail {0}"'
        run: |
          mkdir build
          cd build
          cmake .. -D TEST=1 -D NO_X11=1 -D NO_WAYLAND=1
          cmake --build .
          sudo cmake --install .
          export TMPDIR=/tmp
          bash ../tests/suite.sh
  test-linux_x11-amd64:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        shell: 'script -q -e -c "bash --noprofile --norc -eo pipefail {0}"'
        run: |
          sudo apt update
          sudo apt install -y libx11-dev
          mkdir build
          cd build
          cmake .. -D TEST=1 -D NO_WAYLAND=1
          cmake --build .
          sudo cmake --install .
          export TMPDIR=/tmp
          bash ../tests/suite.sh
  test-linux_wayland-amd64:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        shell: 'script -q -e -c "bash --noprofile --norc -eo pipefail {0}"'
        run: |
          sudo apt update
          sudo apt install -y libwayland-dev
          mkdir build
          cd build
          cmake .. -D TEST=1 -D NO_X11=1
          cmake --build .
          sudo cmake --install .
          export TMPDIR=/tmp
          bash ../tests/suite.sh
  test-linux_x11_wayland-amd64:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        shell: 'script -q -e -c "bash --noprofile --norc -eo pipefail {0}"'
        run: |
          sudo apt update
          sudo apt install -y libx11-dev libwayland-dev
          mkdir build
          cd build
          cmake .. -D TEST=1
          cmake --build .
          sudo cmake --install .
          export TMPDIR=/tmp
          bash ../tests/suite.sh
  test-macos-amd64:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        run: |
          brew install gcc
          mkdir build
          cd build
          cmake .. -D CMAKE_CXX_COMPILER=g++-12 -D TEST=1
          cmake --build .
          cmake --install .
          bash ../tests/suite.sh
  test-windows-amd64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        shell: bash
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release
          echo $HOME
          export TMPDIR=/c/Users/runneradmin/AppData/Local/Temp
          cmake --install .
          #installs to C:/Program Files (x86)/Clipboard/bin/clipboard.exe
          #add to path
          export PATH=$PATH:/c/Program\ Files\ \(x86\)/Clipboard/bin
          bash ../tests/suite.sh